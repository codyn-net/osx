#!/bin/bash

dont_setup_brew=1
source $(dirname "$0")/env

if [ -z "$1" ]; then
	root="$d/../"
else
	root="$1"
fi

function build
{
	args="--prefix=$prefix"

	bdir="$1"
	shift 1

	if [ -f "$bdir/autogen.sh" ]; then
		configure="autogen.sh"
	elif [ -f "$bdir/configure" ]; then
		configure="configure"
	else
		echo "Neither autogen.sh nor configure could be found"
		exit 1
	fi

	tmp=$(mktemp -t codyn-build)

	(cd "$bdir" && ./$configure $args "$@" && make clean && make -j8 && make install DESTDIR="$destdir") &>$tmp

	retval=$?

	if [ $retval -ne 0 ]; then
		cat "$tmp"
	fi

	rm "$tmp"
	return $retval
}

# This function sets up an environment suitable for compiling against the
# mono framework provided libraries
function mono_env
{
	fw="/Library/Frameworks/Mono.framework"
	fwroot="$fw/Versions/Current"

	# install in .install-mono
	destdir="$d/.install-mono"
	prefix="/Library/Frameworks/Codyn.framework/Resources/mono"

	export PKG_CONFIG_PATH="$fwroot/lib/pkgconfig:$destdir$prefix/lib/pkgconfig:$PKG_CONFIG_PATH"
	export PATH="$fwroot/bin:$PATH"
}

# Build normal codyn library
(
	export CFLAGS='-arch i386 -arch x86_64'
	export LDFLAGS='-arch i386 -arch x86_64'

	# Setup full brew environment
	unset dont_setup_brew
	source $(dirname "$0")/env

	# install in .install
	destdir="$d/.install"

	echo "Building codyn..."
	build "$root/codyn" --disable-dependency-tracking  --enable-framework || exit 1
) || exit 1;

# Build codyn library but for use with mono. This means building just 32 bits and
# using the mono provided glib libraries
(
	export CFLAGS='-arch i386'
	export LDFLAGS='-arch i386'

	mono_env

	# Build codyn also again specifically for use with mono
	echo "Building codyn for mono..."
	build "$root/codyn" --datadir="/Library/Frameworks/Codyn.framework/Resources/share" || exit 1
) || exit 1;

# Build codyn sharp if possible
cdnsharp="$root/codyn-sharp"

if [ -d "$cdnsharp" ]; then
	(
		mono_env

		echo "Building codyn sharp..."
		build "$cdnsharp" --enable-release || exit 1
	) || exit 1
else
	exit 0
fi

# Build rawc if possible
cdnrawc="$root/rawc"

if [ -d "$cdnrawc" ]; then
	(
		export CFLAGS='-arch i386 -arch x86_64'
		export LDFLAGS='-arch i386 -arch x86_64'

		mono_env
		pf="$d/.install-mono/Library/Frameworks/Codyn.framework/Resources/mono"

		echo "Building rawc..."
		build "$cdnrawc" --enable-release --disable-dependency-tracking --with-framework="$pf" || exit 1
	) || exit 1
fi

biorobmath="$root/biorob-math-sharp"
plotsharp="$root/plot-sharp"
studio="$root/studio"

if [ -d "$biorobmath" ] && [ -d "$plotsharp" ] && [ -d "$studio" ]; then
	(
		mono_env

		pf="$d/.install-mono/Library/Frameworks/Codyn.framework/Resources/mono"

		echo "Building biorob math sharp"
		build "$biorobmath" --enable-release || exit 1

		echo "Building plot sharp"
		build "$plotsharp" --enable-release --with-framework="$pf" || exit 1

		echo "Building studio"
		build "$studio" --enable-release --with-framework="$pf" || exit 1
	)
fi
